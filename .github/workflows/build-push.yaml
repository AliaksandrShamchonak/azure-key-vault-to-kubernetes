name: build

on:
  push:
    branches:
    - master
    paths:
    - '.github/workflows/**'
    - 'Makefile'
    - 'go.mod'
    - 'go.sum'
    - 'cmd/**'
    - 'pkg/**'
    - '!docs/**'

jobs:
  build-deploy:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master

    - name: Setup Golang
      uses: actions/setup-go@v1
      with:
        go-version: '1.13.4'

    - name: Test
      run: make test

    - name: Build docker images
      run: make build

    - name: Push images to public repo
      run: |
        docker login -u ${{secrets.PUBLIC_REGISTRY_USERNAME}} -p ${{secrets.PUBLIC_REGISTRY_PASSWORD}}
        make release DOCKER_RELEASE_TAG=${GITHUB_REF##*/}

    - name: Setup Kind
      uses: engineerd/setup-kind@v0.3.0
      with:
          image: "kindest/node:v1.13.7"

    - name: 'Deploy to Kubernetes cluster'
      run: |
        kubectl create ns akv2k8s
        HELM_V3=3.0.2
        echo "downloading helm ${HELM_V3}"
        curl -sSL https://get.helm.sh/helm-v${HELM_V3}-linux-amd64.tar.gz | \
        ./linux-amd64/helm version
        ./linux-amd64/helm repo add spv-charts http://charts.spvapi.no
        ./linux-amd64/helm repo update
        ./linux-amd64/helm upgrade --install azure-key-vault-env-injector spv-charts/azure-key-vault-env-injector \
          --namespace akv2k8s \
          --set keyVault.customAuth.enabled=true \
          --set env.AZURE_TENANT_ID=${{secrets.AKV_TEST_TENANT_ID}} \
          --set env.AZURE_CLIENT_ID=${{secrets.AKV_TEST_CLIENT_ID}} \
          --set env.AZURE_CLIENT_SECRET=${{secrets.AKV_TEST_CLIENT_SECRET}} \
          --set installCrd=true \
          --set envImage.tag=${GITHUB_REF##*/} \
          --set authService.image.tag=${GITHUB_REF##*/} \
          --set image.tag=${GITHUB_REF##*/} \
          --version 1.1.0-beta.12 \
          --wait

    - name: Push images to private repo
      run: |
        docker login -u ${{secrets.PRIVATE_REGISTRY_USERNAME}} -p ${{secrets.PRIVATE_REGISTRY_PASSWORD}} dokken.azurecr.io
        make push
        