ARG GO_VERSION=1.11.5
ARG DEP_VERSION=v0.5.0
ARG VCS_REF
ARG BUILD_DATE
ARG VCS_URL

FROM golang:${GO_VERSION}-alpine AS builder

# Create the user and group files that will be used in the running container to
# run the process as an unprivileged user.
RUN mkdir /user && \
    echo 'nobody:x:65534:65534:nobody:/:' > /user/passwd && \
    echo 'nobody:x:65534:' > /user/group

RUN apk add --update --no-cache ca-certificates make git curl

ARG PACKAGE=github.com/SparebankenVest/azure-keyvault-controller

ENV DEP_RELEASE_TAG=${DEP_VERSION}
RUN curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh

RUN mkdir -p /go/src/${PACKAGE}
WORKDIR /go/src/${PACKAGE}

COPY Gopkg.* /go/src/${PACKAGE}/
RUN dep ensure --vendor-only

COPY . /go/src/${PACKAGE}
RUN go install ./cmd/azure-keyvault-secrets-webhook

FROM alpine:3.8

LABEL org.label-schema.schema-version="1.0"
LABEL org.label-schema.build-date=$BUILD_DATE
LABEL org.label-schema.vcs-ref=$VCS_REF
LABEL org.label-schema.vcs-url=$VCS_URL
LABEL org.label-schema.url=$VCS_URL
LABEL org.label-schema.description="A Kubernetes Mutating Admission Webhook that adds an init container to a pod that will inject environment variables from Azure Key Vault"
LABEL org.label-schema.vendor="Sparebanken Vest"      
LABEL org.label-schema.author="Jon Arild TÃ¸rresdal"

RUN apk add --update libcap && rm -rf /var/cache/apk/*

COPY --from=builder /go/bin/azure-keyvault-secrets-webhook /usr/local/bin/azure-keyvault-secrets-webhook
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# RUN adduser -D azure-keyvault-secrets-webhook
# RUN setcap CAP_NET_BIND_SERVICE=+eip /usr/local/bin/azure-keyvault-secrets-webhook
# USER azure-keyvault-secrets-webhook

ENV DEBUG false

ENTRYPOINT ["/usr/local/bin/azure-keyvault-secrets-webhook"]